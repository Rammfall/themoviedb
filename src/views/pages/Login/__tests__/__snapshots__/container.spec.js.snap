// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginContainer to match snapshots with default props 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en"
    formats={Object {}}
    locale="en"
    messages={
      Object {
        "application.theMovieDB": "The Movie DB",
        "page.login.form.login": "Log in",
        "page.login.form.password": "Password",
        "page.login.form.username": "Username",
      }
    }
    onError={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <Connect(LoginContainer)
      onSubmit={[Function]}
    >
      <LoginContainer
        onSubmit={[Function]}
      >
        <WithFormik(LoginForm)
          onSubmit={[Function]}
        >
          <Formik
            handleSubmit={[Function]}
            initialValues={
              Object {
                "password": "",
                "username": "",
              }
            }
            onSubmit={[Function]}
            validationSchema={[Function]}
          >
            <LoginForm
              dirty={false}
              errors={Object {}}
              getFieldHelpers={[Function]}
              getFieldMeta={[Function]}
              getFieldProps={[Function]}
              handleBlur={[Function]}
              handleChange={[Function]}
              handleReset={[Function]}
              handleSubmit={[Function]}
              initialErrors={Object {}}
              initialTouched={Object {}}
              initialValues={
                Object {
                  "password": "",
                  "username": "",
                }
              }
              isSubmitting={false}
              isValid={true}
              isValidating={false}
              onSubmit={[Function]}
              registerField={[Function]}
              resetForm={[Function]}
              setErrors={[Function]}
              setFieldError={[Function]}
              setFieldTouched={[Function]}
              setFieldValue={[Function]}
              setFormikState={[Function]}
              setStatus={[Function]}
              setSubmitting={[Function]}
              setTouched={[Function]}
              setValues={[Function]}
              submitCount={0}
              submitForm={[Function]}
              touched={Object {}}
              unregisterField={[Function]}
              validateField={[Function]}
              validateForm={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              validateOnMount={false}
              values={
                Object {
                  "password": "",
                  "username": "",
                }
              }
            >
              <LoginFormComponent
                isSubmitting={false}
              >
                <div
                  className="center"
                >
                  <Layout>
                    <BasicLayout
                      prefixCls="ant-layout"
                      tagName="section"
                    >
                      <section
                        className="ant-layout"
                      >
                        <Content>
                          <Basic
                            prefixCls="ant-layout-content"
                            tagName="main"
                          >
                            <main
                              className="ant-layout-content"
                            >
                              <Row
                                justify="center"
                                type="flex"
                              >
                                <div
                                  className="ant-row ant-row-center"
                                  style={Object {}}
                                  type="flex"
                                >
                                  <Col>
                                    <div
                                      className="ant-col"
                                      style={Object {}}
                                    >
                                      <Form>
                                        <form
                                          action="#"
                                          onReset={[Function]}
                                          onSubmit={[Function]}
                                        >
                                          <Title>
                                            <Base
                                              component="h1"
                                            >
                                              <LocaleReceiver
                                                componentName="Text"
                                              >
                                                <ResizeObserver
                                                  disabled={true}
                                                  onResize={[Function]}
                                                >
                                                  <Typography
                                                    className=""
                                                    component="h1"
                                                    style={
                                                      Object {
                                                        "WebkitLineClamp": null,
                                                      }
                                                    }
                                                  >
                                                    <h1
                                                      className="ant-typography"
                                                      style={
                                                        Object {
                                                          "WebkitLineClamp": null,
                                                        }
                                                      }
                                                    >
                                                      <FormattedMessage
                                                        id="application.theMovieDB"
                                                      >
                                                        The Movie DB
                                                      </FormattedMessage>
                                                    </h1>
                                                  </Typography>
                                                </ResizeObserver>
                                              </LocaleReceiver>
                                            </Base>
                                          </Title>
                                          <Field
                                            component={[Function]}
                                            name="username"
                                            placeholder="Username"
                                            prefix={
                                              <ForwardRef(UserOutlined)
                                                style={
                                                  Object {
                                                    "color": "rgba(0,0,0,.25)",
                                                  }
                                                }
                                              />
                                            }
                                          >
                                            <InputField
                                              field={
                                                Object {
                                                  "name": "username",
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "value": "",
                                                }
                                              }
                                              form={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "getFieldHelpers": [Function],
                                                  "getFieldMeta": [Function],
                                                  "getFieldProps": [Function],
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialErrors": Object {},
                                                  "initialStatus": undefined,
                                                  "initialTouched": Object {},
                                                  "initialValues": Object {
                                                    "password": "",
                                                    "username": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": true,
                                                  "isValidating": false,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "validateOnMount": false,
                                                  "values": Object {
                                                    "password": "",
                                                    "username": "",
                                                  },
                                                }
                                              }
                                              placeholder="Username"
                                              prefix={
                                                <ForwardRef(UserOutlined)
                                                  style={
                                                    Object {
                                                      "color": "rgba(0,0,0,.25)",
                                                    }
                                                  }
                                                />
                                              }
                                              type="text"
                                            >
                                              <Input
                                                name="username"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Username"
                                                prefix={
                                                  <ForwardRef(UserOutlined)
                                                    style={
                                                      Object {
                                                        "color": "rgba(0,0,0,.25)",
                                                      }
                                                    }
                                                  />
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <FormItem>
                                                  <Row
                                                    className="ant-form-item"
                                                    key="row"
                                                  >
                                                    <div
                                                      className="ant-row ant-form-item"
                                                      style={Object {}}
                                                    >
                                                      <FormItemLabel
                                                        prefixCls="ant-form"
                                                      />
                                                      <FormItemInput
                                                        errors={Array []}
                                                        onDomErrorVisibleChange={[Function]}
                                                        prefixCls="ant-form"
                                                        status=""
                                                        validateStatus=""
                                                      >
                                                        <Col
                                                          className="ant-form-item-control"
                                                        >
                                                          <div
                                                            className="ant-col ant-form-item-control"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              className="ant-form-item-control-input"
                                                            >
                                                              <div
                                                                className="ant-form-item-control-input-content"
                                                              >
                                                                <Input
                                                                  name="username"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  placeholder="Username"
                                                                  prefix={
                                                                    <ForwardRef(UserOutlined)
                                                                      style={
                                                                        Object {
                                                                          "color": "rgba(0,0,0,.25)",
                                                                        }
                                                                      }
                                                                    />
                                                                  }
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ClearableLabeledInput
                                                                    bordered={true}
                                                                    element={
                                                                      <input
                                                                        className="ant-input"
                                                                        name="username"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        placeholder="Username"
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    }
                                                                    focused={false}
                                                                    handleReset={[Function]}
                                                                    inputType="input"
                                                                    name="username"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    placeholder="Username"
                                                                    prefix={
                                                                      <ForwardRef(UserOutlined)
                                                                        style={
                                                                          Object {
                                                                            "color": "rgba(0,0,0,.25)",
                                                                          }
                                                                        }
                                                                      />
                                                                    }
                                                                    prefixCls="ant-input"
                                                                    triggerFocus={[Function]}
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <span
                                                                      className="ant-input-affix-wrapper"
                                                                      onMouseUp={[Function]}
                                                                    >
                                                                      <span
                                                                        className="ant-input-prefix"
                                                                      >
                                                                        <ForwardRef(UserOutlined)
                                                                          style={
                                                                            Object {
                                                                              "color": "rgba(0,0,0,.25)",
                                                                            }
                                                                          }
                                                                        >
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "user",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                            style={
                                                                              Object {
                                                                                "color": "rgba(0,0,0,.25)",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="user"
                                                                              className="anticon anticon-user"
                                                                              role="img"
                                                                              style={
                                                                                Object {
                                                                                  "color": "rgba(0,0,0,.25)",
                                                                                }
                                                                              }
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "user",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="user"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-user"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z"
                                                                                    key="svg-user-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(UserOutlined)>
                                                                      </span>
                                                                      <input
                                                                        className="ant-input"
                                                                        name="username"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        placeholder="Username"
                                                                        style={null}
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </span>
                                                                  </ClearableLabeledInput>
                                                                </Input>
                                                              </div>
                                                            </div>
                                                            <ErrorList
                                                              errors={Array []}
                                                              onDomErrorVisibleChange={[Function]}
                                                            >
                                                              <CSSMotion
                                                                motionAppear={true}
                                                                motionDeadline={500}
                                                                motionName="show-help"
                                                                onLeaveEnd={[Function]}
                                                                removeOnLeave={true}
                                                                visible={false}
                                                              >
                                                                <DomWrapper />
                                                              </CSSMotion>
                                                            </ErrorList>
                                                          </div>
                                                        </Col>
                                                      </FormItemInput>
                                                    </div>
                                                  </Row>
                                                </FormItem>
                                              </Input>
                                            </InputField>
                                          </Field>
                                          <Field
                                            component={[Function]}
                                            name="password"
                                            placeholder="Password"
                                            prefix={
                                              <ForwardRef(LockOutlined)
                                                style={
                                                  Object {
                                                    "color": "rgba(0,0,0,.25)",
                                                  }
                                                }
                                              />
                                            }
                                            type="password"
                                          >
                                            <InputField
                                              field={
                                                Object {
                                                  "name": "password",
                                                  "onBlur": [Function],
                                                  "onChange": [Function],
                                                  "value": "",
                                                }
                                              }
                                              form={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "getFieldHelpers": [Function],
                                                  "getFieldMeta": [Function],
                                                  "getFieldProps": [Function],
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialErrors": Object {},
                                                  "initialStatus": undefined,
                                                  "initialTouched": Object {},
                                                  "initialValues": Object {
                                                    "password": "",
                                                    "username": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": true,
                                                  "isValidating": false,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "validateOnMount": false,
                                                  "values": Object {
                                                    "password": "",
                                                    "username": "",
                                                  },
                                                }
                                              }
                                              placeholder="Password"
                                              prefix={
                                                <ForwardRef(LockOutlined)
                                                  style={
                                                    Object {
                                                      "color": "rgba(0,0,0,.25)",
                                                    }
                                                  }
                                                />
                                              }
                                              type="password"
                                            >
                                              <Input
                                                name="password"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                placeholder="Password"
                                                prefix={
                                                  <ForwardRef(LockOutlined)
                                                    style={
                                                      Object {
                                                        "color": "rgba(0,0,0,.25)",
                                                      }
                                                    }
                                                  />
                                                }
                                                type="password"
                                                value=""
                                              >
                                                <FormItem>
                                                  <Row
                                                    className="ant-form-item"
                                                    key="row"
                                                  >
                                                    <div
                                                      className="ant-row ant-form-item"
                                                      style={Object {}}
                                                    >
                                                      <FormItemLabel
                                                        prefixCls="ant-form"
                                                      />
                                                      <FormItemInput
                                                        errors={Array []}
                                                        onDomErrorVisibleChange={[Function]}
                                                        prefixCls="ant-form"
                                                        status=""
                                                        validateStatus=""
                                                      >
                                                        <Col
                                                          className="ant-form-item-control"
                                                        >
                                                          <div
                                                            className="ant-col ant-form-item-control"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              className="ant-form-item-control-input"
                                                            >
                                                              <div
                                                                className="ant-form-item-control-input-content"
                                                              >
                                                                <Password
                                                                  action="click"
                                                                  iconRender={[Function]}
                                                                  name="password"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  placeholder="Password"
                                                                  prefix={
                                                                    <ForwardRef(LockOutlined)
                                                                      style={
                                                                        Object {
                                                                          "color": "rgba(0,0,0,.25)",
                                                                        }
                                                                      }
                                                                    />
                                                                  }
                                                                  type="password"
                                                                  value=""
                                                                  visibilityToggle={true}
                                                                >
                                                                  <Input
                                                                    action="click"
                                                                    className="ant-input-password"
                                                                    name="password"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    placeholder="Password"
                                                                    prefix={
                                                                      <ForwardRef(LockOutlined)
                                                                        style={
                                                                          Object {
                                                                            "color": "rgba(0,0,0,.25)",
                                                                          }
                                                                        }
                                                                      />
                                                                    }
                                                                    prefixCls="ant-input"
                                                                    suffix={
                                                                      <ForwardRef(EyeInvisibleOutlined)
                                                                        className="ant-input-password-icon"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseUp={[Function]}
                                                                      />
                                                                    }
                                                                    type="password"
                                                                    value=""
                                                                  >
                                                                    <ClearableLabeledInput
                                                                      action="click"
                                                                      bordered={true}
                                                                      className="ant-input-password"
                                                                      element={
                                                                        <input
                                                                          action="click"
                                                                          className="ant-input ant-input-password"
                                                                          name="password"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          placeholder="Password"
                                                                          type="password"
                                                                          value=""
                                                                        />
                                                                      }
                                                                      focused={false}
                                                                      handleReset={[Function]}
                                                                      inputType="input"
                                                                      name="password"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      placeholder="Password"
                                                                      prefix={
                                                                        <ForwardRef(LockOutlined)
                                                                          style={
                                                                            Object {
                                                                              "color": "rgba(0,0,0,.25)",
                                                                            }
                                                                          }
                                                                        />
                                                                      }
                                                                      prefixCls="ant-input"
                                                                      suffix={
                                                                        <ForwardRef(EyeInvisibleOutlined)
                                                                          className="ant-input-password-icon"
                                                                          onClick={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseUp={[Function]}
                                                                        />
                                                                      }
                                                                      triggerFocus={[Function]}
                                                                      type="password"
                                                                      value=""
                                                                    >
                                                                      <span
                                                                        className="ant-input-affix-wrapper ant-input-password"
                                                                        onMouseUp={[Function]}
                                                                      >
                                                                        <span
                                                                          className="ant-input-prefix"
                                                                        >
                                                                          <ForwardRef(LockOutlined)
                                                                            style={
                                                                              Object {
                                                                                "color": "rgba(0,0,0,.25)",
                                                                              }
                                                                            }
                                                                          >
                                                                            <AntdIcon
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "64 64 896 896",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "lock",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                              style={
                                                                                Object {
                                                                                  "color": "rgba(0,0,0,.25)",
                                                                                }
                                                                              }
                                                                            >
                                                                              <span
                                                                                aria-label="lock"
                                                                                className="anticon anticon-lock"
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "color": "rgba(0,0,0,.25)",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <IconReact
                                                                                  icon={
                                                                                    Object {
                                                                                      "icon": Object {
                                                                                        "attrs": Object {
                                                                                          "focusable": "false",
                                                                                          "viewBox": "64 64 896 896",
                                                                                        },
                                                                                        "children": Array [
                                                                                          Object {
                                                                                            "attrs": Object {
                                                                                              "d": "M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z",
                                                                                            },
                                                                                            "tag": "path",
                                                                                          },
                                                                                        ],
                                                                                        "tag": "svg",
                                                                                      },
                                                                                      "name": "lock",
                                                                                      "theme": "outlined",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    data-icon="lock"
                                                                                    fill="currentColor"
                                                                                    focusable="false"
                                                                                    height="1em"
                                                                                    key="svg-lock"
                                                                                    viewBox="64 64 896 896"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z"
                                                                                      key="svg-lock-svg-0"
                                                                                    />
                                                                                  </svg>
                                                                                </IconReact>
                                                                              </span>
                                                                            </AntdIcon>
                                                                          </ForwardRef(LockOutlined)>
                                                                        </span>
                                                                        <input
                                                                          action="click"
                                                                          className="ant-input"
                                                                          name="password"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          placeholder="Password"
                                                                          style={null}
                                                                          type="password"
                                                                          value=""
                                                                        />
                                                                        <span
                                                                          className="ant-input-suffix"
                                                                        >
                                                                          <ForwardRef(EyeInvisibleOutlined)
                                                                            className="ant-input-password-icon"
                                                                            key="passwordIcon"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseUp={[Function]}
                                                                          >
                                                                            <AntdIcon
                                                                              className="ant-input-password-icon"
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "64 64 896 896",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "eye-invisible",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                              onClick={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseUp={[Function]}
                                                                            >
                                                                              <span
                                                                                aria-label="eye-invisible"
                                                                                className="anticon anticon-eye-invisible ant-input-password-icon"
                                                                                onClick={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                role="img"
                                                                                tabIndex={-1}
                                                                              >
                                                                                <IconReact
                                                                                  icon={
                                                                                    Object {
                                                                                      "icon": Object {
                                                                                        "attrs": Object {
                                                                                          "focusable": "false",
                                                                                          "viewBox": "64 64 896 896",
                                                                                        },
                                                                                        "children": Array [
                                                                                          Object {
                                                                                            "attrs": Object {
                                                                                              "d": "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z",
                                                                                            },
                                                                                            "tag": "path",
                                                                                          },
                                                                                          Object {
                                                                                            "attrs": Object {
                                                                                              "d": "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z",
                                                                                            },
                                                                                            "tag": "path",
                                                                                          },
                                                                                        ],
                                                                                        "tag": "svg",
                                                                                      },
                                                                                      "name": "eye-invisible",
                                                                                      "theme": "outlined",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    data-icon="eye-invisible"
                                                                                    fill="currentColor"
                                                                                    focusable="false"
                                                                                    height="1em"
                                                                                    key="svg-eye-invisible"
                                                                                    viewBox="64 64 896 896"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z"
                                                                                      key="svg-eye-invisible-svg-0"
                                                                                    />
                                                                                    <path
                                                                                      d="M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z"
                                                                                      key="svg-eye-invisible-svg-1"
                                                                                    />
                                                                                  </svg>
                                                                                </IconReact>
                                                                              </span>
                                                                            </AntdIcon>
                                                                          </ForwardRef(EyeInvisibleOutlined)>
                                                                        </span>
                                                                      </span>
                                                                    </ClearableLabeledInput>
                                                                  </Input>
                                                                </Password>
                                                              </div>
                                                            </div>
                                                            <ErrorList
                                                              errors={Array []}
                                                              onDomErrorVisibleChange={[Function]}
                                                            >
                                                              <CSSMotion
                                                                motionAppear={true}
                                                                motionDeadline={500}
                                                                motionName="show-help"
                                                                onLeaveEnd={[Function]}
                                                                removeOnLeave={true}
                                                                visible={false}
                                                              >
                                                                <DomWrapper />
                                                              </CSSMotion>
                                                            </ErrorList>
                                                          </div>
                                                        </Col>
                                                      </FormItemInput>
                                                    </div>
                                                  </Row>
                                                </FormItem>
                                              </Input>
                                            </InputField>
                                          </Field>
                                          <FormItem>
                                            <Row
                                              className="ant-form-item"
                                              key="row"
                                            >
                                              <div
                                                className="ant-row ant-form-item"
                                                style={Object {}}
                                              >
                                                <FormItemLabel
                                                  prefixCls="ant-form"
                                                />
                                                <FormItemInput
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  status=""
                                                  validateStatus=""
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input-content"
                                                        >
                                                          <Button
                                                            htmlType="submit"
                                                            loading={false}
                                                            type="primary"
                                                          >
                                                            <Wave>
                                                              <button
                                                                className="ant-btn ant-btn-primary"
                                                                onClick={[Function]}
                                                                type="submit"
                                                              >
                                                                <LoadingIcon
                                                                  existIcon={false}
                                                                  loading={false}
                                                                  prefixCls="ant-btn"
                                                                >
                                                                  <CSSMotion
                                                                    motionName="ant-btn-loading-icon-motion"
                                                                    onAppearActive={[Function]}
                                                                    onAppearStart={[Function]}
                                                                    onEnterActive={[Function]}
                                                                    onEnterStart={[Function]}
                                                                    onLeaveActive={[Function]}
                                                                    onLeaveStart={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </LoadingIcon>
                                                                <span
                                                                  key=".0"
                                                                >
                                                                  Log in
                                                                </span>
                                                              </button>
                                                            </Wave>
                                                          </Button>
                                                        </div>
                                                      </div>
                                                      <ErrorList
                                                        errors={Array []}
                                                        onDomErrorVisibleChange={[Function]}
                                                      >
                                                        <CSSMotion
                                                          motionAppear={true}
                                                          motionDeadline={500}
                                                          motionName="show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </ErrorList>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </FormItem>
                                          <p />
                                        </form>
                                      </Form>
                                    </div>
                                  </Col>
                                </div>
                              </Row>
                            </main>
                          </Basic>
                        </Content>
                      </section>
                    </BasicLayout>
                  </Layout>
                </div>
              </LoginFormComponent>
            </LoginForm>
          </Formik>
        </WithFormik(LoginForm)>
      </LoginContainer>
    </Connect(LoginContainer)>
  </IntlProvider>
</Provider>
`;
