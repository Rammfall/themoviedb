// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppRootComponent when isLoggedIn true matches snapshot 1`] = `
<Fragment>
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(LoginPage)",
        "type": [Function],
      }
    }
    exact={true}
    path="/login"
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(DashboardPage))",
        "type": [Function],
      }
    }
    exact={true}
    path="/"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(ListsPage))",
        "type": [Function],
      }
    }
    exact={true}
    path="/lists"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(injectIntl(WatchlistPage)))",
        "type": [Function],
      }
    }
    exact={true}
    path="/watchlist"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(injectIntl(FavoritesPage)))",
        "type": [Function],
      }
    }
    exact={true}
    path="/favorites"
    privateRoute={true}
  />
</Fragment>
`;

exports[`AppRootComponent with default props matches snapshot 1`] = `
<Fragment>
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(LoginPage)",
        "type": [Function],
      }
    }
    exact={true}
    path="/login"
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(DashboardPage))",
        "type": [Function],
      }
    }
    exact={true}
    path="/"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(ListsPage))",
        "type": [Function],
      }
    }
    exact={true}
    path="/lists"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(injectIntl(WatchlistPage)))",
        "type": [Function],
      }
    }
    exact={true}
    path="/watchlist"
    privateRoute={true}
  />
  <Connect(Route)
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(withRouter(injectIntl(FavoritesPage)))",
        "type": [Function],
      }
    }
    exact={true}
    path="/favorites"
    privateRoute={true}
  />
</Fragment>
`;
